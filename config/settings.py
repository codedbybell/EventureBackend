"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os # os modülünü import ediyoruz
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- GÜVENLİK AYARLARI ---
# .env dosyasından okunur. Lütfen projenizin ana dizininde bir .env dosyası oluşturun.
# Örnek .env içeriği:
# SECRET_KEY=your_super_secret_key_here
# DEBUG=True
SECRET_KEY = config('SECRET_KEY')

# Geliştirme ortamı için DEBUG=True, canlı sunucu için DEBUG=False olmalıdır.
DEBUG = config('DEBUG', default=False, cast=bool)

# DEBUG=True iken geliştirme sunucusunun tüm IP'lerden erişilebilir olması için
# Veya kendi yerel IP adresinizi ekleyebilirsiniz.
ALLOWED_HOSTS = ['*'] # Geliştirme için '*' kullanılabilir. Prodüksiyonda alan adınızı yazın.


# --- UYGULAMA TANIMLARI ---
INSTALLED_APPS = [
    # Django'nun kendi uygulamaları
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Üçüncü parti uygulamalar
    "rest_framework",
    'rest_framework_simplejwt',
    'drf_spectacular',

    # Kendi uygulamalarımız
    'users.apps.UsersConfig',
    "events",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# --- VERİTABANI AYARLARI ---
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# --- KULLANICI MODELİ VE ŞİFRE DOĞRULAMA ---
AUTH_USER_MODEL = 'users.CustomUser'

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# --- ULUSLARARASILAŞTIRMA ---
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True


# --- STATİK VE MEDYA DOSYALARI ---

# Statik dosyaların (CSS, JavaScript) sunulacağı URL
STATIC_URL = "/static/"

# Kullanıcı tarafından yüklenen medya dosyalarının (resimler) sunulacağı URL
# Örn: http://localhost:8000/media/event_images/my_image.jpg
MEDIA_URL = "/media/"

# Medya dosyalarının sunucuda fiziksel olarak saklanacağı klasörün yolu
# Proje ana dizininde 'media' adında bir klasör oluşturur.
MEDIA_ROOT = BASE_DIR / 'media'


# --- OTOMATİK BİRİNCİL ANAHTAR TİPİ ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# --- DJANGO REST FRAMEWORK AYARLARI ---
REST_FRAMEWORK = {
    # Otomatik dokümantasyon için şema ayarı
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',

    # API'mızın varsayılan olarak JWT ile kimlik doğrulama yapacağını belirtiyoruz.
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    # Varsayılan olarak tüm endpointlerin en azından okunabilir olmasını sağlar.
    # Spesifik view'larda daha kısıtlayıcı izinler belirleyebilirsiniz.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}


# --- DRF-SPECTACULAR AYARLARI (API DOKÜMANTASYONU) ---
SPECTACULAR_SETTINGS = {
    'TITLE': 'Eventure Platform API',
    'DESCRIPTION': 'Kampüs Etkinlik Platformu için geliştirilen REST API dokümantasyonu.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}